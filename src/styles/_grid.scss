// *************************************************** //
// GRID - based in bootstrap 3 grid
// built using display:grid;
// (https://css-tricks.com/snippets/css/complete-guide-grid/)
// Advantages:
// * Item height matches tallest item in row
// * No need for element inside item to utilize gutter
// * No awkwardly rounded percentages
// * No negative margin hacks
// * No clear-fix hacks
// *************************************************** //

// USAGE
    // <!-- Stack the columns on mobile by making one full-width and the other half-width -->
    // <div class="row show-grid">
    //   <div class="col-xs-12 col-md-8">
    //      .col-xs-12 .col-md-8 (NESTED)
    //      <div class="row">
    //          <div class="col-xs-6 col-md-4">.col-xs-6 .col-md-4</div>
    //          <div class="col-xs-6 col-md-4">.col-xs-6 .col-md-4</div>
    //          <div class="col-xs-6 col-md-4">.col-xs-6 .col-md-4</div>
    //      </div>
    //   </div>
    // </div>

    // <div class="col-xs-6 col-md-4">.col-xs-6 .col-md-4 (Matches height of tallest item in row)</div>
    //      <!-- Columns start at 50% wide on mobile and bump up to 33.3% wide on desktop -->
    //      <div class="col-xs-6 col-md-4">.col-xs-6 .col-md-4</div>
    //      <div class="col-xs-6 col-md-4">.col-xs-6 .col-md-4</div>
    //      <div class="col-xs-6 col-md-4">.col-xs-6 .col-md-4</div>
    //
    //      <!-- Columns are always 50% wide, on mobile and desktop -->
    //      <div class="col-xs-6">.col-xs-6</div>
    //      <div class="col-xs-6">.col-xs-6</div>
    // </div>

// SET GRID RULES
    // Number of columns
    $num-columns: 12 !default;

    // Space between columns
    $gutter-width: 15px !default;

// DEFINING GRID
    .row{
        display: grid;
        grid-template-columns: repeat($num-columns, 5fr); // Uniform columns. No need for rounded percentages to calculate widths.
        grid-gap: $gutter-width; // Actual gutter width. No need for negative margin hack.
    }
    .show-grid [class^=col-]{
        padding-top: 10px;
        padding-bottom: 10px;
        border: 1px solid rgba(86,61,124,.2);
    }
    [class^=col-]{
        grid-column-end: span $num-columns; // Full width fallback when no column size is define for the screen size.
    }

    // NESTED LOOP
    // Loop through responsive breakpoints
    @each $size, $abbr in (0,xxs),(320px,xs),(768px,sm),(992px,md),(1200px,lg), (1420px,xl){
        @media (min-width: $size){
            // Loop through col classes
            @for $i from 1 through $num-columns{
                .col-#{$abbr}-#{$i}{
                    grid-column-end: span $i;
                }
            }
        }
    }